{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veera\\\\OneDrive\\\\Desktop\\\\Web App\\\\client\\\\src\\\\components\\\\VoiceTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceTest = () => {\n  _s();\n  const [voices, setVoices] = useState([]);\n  useEffect(() => {\n    const loadVoices = () => {\n      const availableVoices = speechSynthesis.getVoices();\n      setVoices(availableVoices);\n      console.log('Available voices:', availableVoices.map(v => ({\n        name: v.name,\n        lang: v.lang\n      })));\n    };\n    loadVoices();\n    speechSynthesis.onvoiceschanged = loadVoices;\n  }, []);\n  const testTamilSpeech = () => {\n    const text = 'வழங்கப்பட்ட வேலைகளின் எண்ணிக்கை ஐந்து';\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    // Try to find Tamil voice\n    const tamilVoice = voices.find(voice => voice.lang.includes('ta') || voice.name.toLowerCase().includes('tamil'));\n    if (tamilVoice) {\n      utterance.voice = tamilVoice;\n      console.log('Using Tamil voice:', tamilVoice.name);\n    } else {\n      console.log('No Tamil voice found, using default');\n    }\n    utterance.lang = 'ta-IN';\n    utterance.rate = 0.7;\n    speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: 'white',\n      margin: '20px',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Voice Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testTamilSpeech,\n      style: {\n        padding: '10px 20px',\n        margin: '10px'\n      },\n      children: \"Test Tamil Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Voices:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), voices.filter(v => v.lang.includes('ta') || v.lang.includes('en')).map((voice, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [voice.name, \" - \", voice.lang]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceTest, \"voBCRPrxbusLN1W5VcGcC4f6TU8=\");\n_c = VoiceTest;\nexport default VoiceTest;\nvar _c;\n$RefreshReg$(_c, \"VoiceTest\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VoiceTest","_s","voices","setVoices","loadVoices","availableVoices","speechSynthesis","getVoices","console","log","map","v","name","lang","onvoiceschanged","testTamilSpeech","text","utterance","SpeechSynthesisUtterance","tamilVoice","find","voice","includes","toLowerCase","rate","speak","style","padding","background","margin","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","i","_c","$RefreshReg$"],"sources":["C:/Users/veera/OneDrive/Desktop/Web App/client/src/components/VoiceTest.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst VoiceTest = () => {\n  const [voices, setVoices] = useState([]);\n\n  useEffect(() => {\n    const loadVoices = () => {\n      const availableVoices = speechSynthesis.getVoices();\n      setVoices(availableVoices);\n      console.log('Available voices:', availableVoices.map(v => ({ name: v.name, lang: v.lang })));\n    };\n\n    loadVoices();\n    speechSynthesis.onvoiceschanged = loadVoices;\n  }, []);\n\n  const testTamilSpeech = () => {\n    const text = 'வழங்கப்பட்ட வேலைகளின் எண்ணிக்கை ஐந்து';\n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    // Try to find Tamil voice\n    const tamilVoice = voices.find(voice => \n      voice.lang.includes('ta') || voice.name.toLowerCase().includes('tamil')\n    );\n    \n    if (tamilVoice) {\n      utterance.voice = tamilVoice;\n      console.log('Using Tamil voice:', tamilVoice.name);\n    } else {\n      console.log('No Tamil voice found, using default');\n    }\n    \n    utterance.lang = 'ta-IN';\n    utterance.rate = 0.7;\n    speechSynthesis.speak(utterance);\n  };\n\n  return (\n    <div style={{ padding: '20px', background: 'white', margin: '20px', borderRadius: '8px' }}>\n      <h3>Voice Test</h3>\n      <button onClick={testTamilSpeech} style={{ padding: '10px 20px', margin: '10px' }}>\n        Test Tamil Speech\n      </button>\n      <div>\n        <h4>Available Voices:</h4>\n        {voices.filter(v => v.lang.includes('ta') || v.lang.includes('en')).map((voice, i) => (\n          <div key={i}>{voice.name} - {voice.lang}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}