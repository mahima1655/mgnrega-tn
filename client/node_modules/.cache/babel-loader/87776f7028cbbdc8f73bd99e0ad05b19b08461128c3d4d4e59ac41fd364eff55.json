{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veera\\\\OneDrive\\\\Desktop\\\\Web App\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useLanguage } from '../utils/LanguageContext';\nimport { api } from '../services/api';\nimport MetricCard from './MetricCard';\nimport PerformanceChart from './PerformanceChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    district\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [stateAvg, setStateAvg] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const {\n    t,\n    language,\n    toggleLanguage\n  } = useLanguage();\n  useEffect(() => {\n    loadData();\n  }, [district]);\n  const loadData = async () => {\n    try {\n      const [districtResponse, stateResponse] = await Promise.all([api.getDistrictData(district), api.getStateAverage()]);\n      setData(districtResponse.data);\n      setStateAvg(stateResponse.data);\n    } catch (error) {\n      console.error('Failed to load data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getPerformanceLevel = (value, avgValue) => {\n    if (!avgValue) return 'average';\n    const ratio = value / avgValue;\n    if (ratio >= 1.1) return 'good';\n    if (ratio <= 0.9) return 'poor';\n    return 'average';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  const currentData = data[0] || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"language-toggle\",\n      onClick: toggleLanguage,\n      children: language === 'en' ? '🇮🇳 தமிழ்' : '🇬🇧 English'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          color: 'white',\n          textDecoration: 'none'\n        },\n        children: [\"\\u2190 \", t('title')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: district\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date().toLocaleDateString(language === 'ta' ? 'ta-IN' : 'en-IN')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-cards\",\n      children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: \"\\uD83C\\uDFE0\",\n        value: currentData.total_households_worked || 0,\n        label: t('jobsProvided'),\n        level: getPerformanceLevel(currentData.total_households_worked, stateAvg === null || stateAvg === void 0 ? void 0 : stateAvg.avg_households)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: \"\\uD83D\\uDCC5\",\n        value: parseFloat(currentData.avg_days_employment || 0).toFixed(1),\n        label: t('avgDays'),\n        level: getPerformanceLevel(currentData.avg_days_employment, stateAvg === null || stateAvg === void 0 ? void 0 : stateAvg.avg_days)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: \"\\uD83D\\uDCB0\",\n        value: `₹${(currentData.total_exp || 0).toLocaleString('en-IN')}`,\n        label: t('fundsDisburse'),\n        level: getPerformanceLevel(currentData.total_exp, stateAvg === null || stateAvg === void 0 ? void 0 : stateAvg.avg_funds)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: \"\\uD83D\\uDC65\",\n        value: currentData.total_active_workers || 0,\n        label: t('beneficiaries'),\n        level: getPerformanceLevel(currentData.total_active_workers, stateAvg === null || stateAvg === void 0 ? void 0 : stateAvg.avg_workers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CER4Ec4qMCaWQsaLo7kWSprsWCk=\", false, function () {\n  return [useParams, useLanguage];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useLanguage","api","MetricCard","PerformanceChart","jsxDEV","_jsxDEV","Dashboard","_s","district","data","setData","stateAvg","setStateAvg","loading","setLoading","t","language","toggleLanguage","loadData","districtResponse","stateResponse","Promise","all","getDistrictData","getStateAverage","error","console","getPerformanceLevel","value","avgValue","ratio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentData","onClick","to","style","color","textDecoration","Date","toLocaleDateString","icon","total_households_worked","label","level","avg_households","parseFloat","avg_days_employment","toFixed","avg_days","total_exp","toLocaleString","avg_funds","total_active_workers","avg_workers","_c","$RefreshReg$"],"sources":["C:/Users/veera/OneDrive/Desktop/Web App/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useLanguage } from '../utils/LanguageContext';\nimport { api } from '../services/api';\nimport MetricCard from './MetricCard';\nimport PerformanceChart from './PerformanceChart';\n\nconst Dashboard = () => {\n  const { district } = useParams();\n  const [data, setData] = useState([]);\n  const [stateAvg, setStateAvg] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { t, language, toggleLanguage } = useLanguage();\n\n  useEffect(() => {\n    loadData();\n  }, [district]);\n\n  const loadData = async () => {\n    try {\n      const [districtResponse, stateResponse] = await Promise.all([\n        api.getDistrictData(district),\n        api.getStateAverage()\n      ]);\n      \n      setData(districtResponse.data);\n      setStateAvg(stateResponse.data);\n    } catch (error) {\n      console.error('Failed to load data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getPerformanceLevel = (value, avgValue) => {\n    if (!avgValue) return 'average';\n    const ratio = value / avgValue;\n    if (ratio >= 1.1) return 'good';\n    if (ratio <= 0.9) return 'poor';\n    return 'average';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"loading\">{t('loading')}</div>\n      </div>\n    );\n  }\n\n  const currentData = data[0] || {};\n\n  return (\n    <div className=\"container\">\n      <button className=\"language-toggle\" onClick={toggleLanguage}>\n        {language === 'en' ? '🇮🇳 தமிழ்' : '🇬🇧 English'}\n      </button>\n\n      <div className=\"header\">\n        <Link to=\"/\" style={{color: 'white', textDecoration: 'none'}}>\n          ← {t('title')}\n        </Link>\n        <h1>{district}</h1>\n        <p>{new Date().toLocaleDateString(language === 'ta' ? 'ta-IN' : 'en-IN')}</p>\n      </div>\n\n      <div className=\"metric-cards\">\n        <MetricCard\n          icon=\"🏠\"\n          value={currentData.total_households_worked || 0}\n          label={t('jobsProvided')}\n          level={getPerformanceLevel(currentData.total_households_worked, stateAvg?.avg_households)}\n        />\n        \n        <MetricCard\n          icon=\"📅\"\n          value={parseFloat(currentData.avg_days_employment || 0).toFixed(1)}\n          label={t('avgDays')}\n          level={getPerformanceLevel(currentData.avg_days_employment, stateAvg?.avg_days)}\n        />\n        \n        <MetricCard\n          icon=\"💰\"\n          value={`₹${(currentData.total_exp || 0).toLocaleString('en-IN')}`}\n          label={t('fundsDisburse')}\n          level={getPerformanceLevel(currentData.total_exp, stateAvg?.avg_funds)}\n        />\n        \n        <MetricCard\n          icon=\"👥\"\n          value={currentData.total_active_workers || 0}\n          label={t('beneficiaries')}\n          level={getPerformanceLevel(currentData.total_active_workers, stateAvg?.avg_workers)}\n        />\n      </div>\n\n      <PerformanceChart data={data} />\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}