{"ast":null,"code":"import axios from'axios';const API_BASE='/api';export const api={getDistricts:()=>axios.get(\"\".concat(API_BASE,\"/districts\")),getDistrictData:district=>axios.get(\"\".concat(API_BASE,\"/district/\").concat(district)),getStateAverage:()=>axios.get(\"\".concat(API_BASE,\"/state-average\")),refreshData:()=>axios.post(\"\".concat(API_BASE,\"/refresh-data\"))};export const detectLocation=()=>{return new Promise((resolve,reject)=>{if(!navigator.geolocation){reject(new Error('Geolocation not supported'));return;}navigator.geolocation.getCurrentPosition(async position=>{try{const{latitude,longitude}=position.coords;// Tamil Nadu coordinates check\nif(latitude<8.0||latitude>13.5||longitude<76.0||longitude>80.5){reject(new Error('Location outside Tamil Nadu'));return;}const districts=await api.getDistricts();// Simple coordinate-based district mapping for major cities\nconst districtMap={'CHENNAI':{lat:13.0827,lng:80.2707,radius:0.5},'COIMBATORE':{lat:11.0168,lng:76.9558,radius:0.3},'MADURAI':{lat:9.9252,lng:78.1198,radius:0.3},'TIRUCHIRAPPALLI':{lat:10.7905,lng:78.7047,radius:0.3},'SALEM':{lat:11.664,lng:78.146,radius:0.3},'TIRUNELVELI':{lat:8.7139,lng:77.7567,radius:0.3},'VELLORE':{lat:12.9165,lng:79.1325,radius:0.3}};let detectedDistrict=null;// Find closest district\nfor(const[district,coords]of Object.entries(districtMap)){const distance=Math.sqrt(Math.pow(latitude-coords.lat,2)+Math.pow(longitude-coords.lng,2));if(distance<=coords.radius&&districts.data.includes(district)){detectedDistrict=district;break;}}// Fallback to first available district if in Tamil Nadu\nif(!detectedDistrict&&districts.data.length>0){detectedDistrict=districts.data[0];}resolve(detectedDistrict);}catch(error){reject(error);}},error=>{if(error.code===1){reject(new Error('Location access denied'));}else if(error.code===2){reject(new Error('Location unavailable'));}else{reject(new Error('Location timeout'));}},{timeout:10000,enableHighAccuracy:false});});};","map":{"version":3,"names":["axios","API_BASE","api","getDistricts","get","concat","getDistrictData","district","getStateAverage","refreshData","post","detectLocation","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","position","latitude","longitude","coords","districts","districtMap","lat","lng","radius","detectedDistrict","Object","entries","distance","Math","sqrt","pow","data","includes","length","error","code","timeout","enableHighAccuracy"],"sources":["C:/Users/veera/OneDrive/Desktop/Web App/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = '/api';\n\nexport const api = {\n  getDistricts: () => axios.get(`${API_BASE}/districts`),\n  getDistrictData: (district) => axios.get(`${API_BASE}/district/${district}`),\n  getStateAverage: () => axios.get(`${API_BASE}/state-average`),\n  refreshData: () => axios.post(`${API_BASE}/refresh-data`)\n};\n\nexport const detectLocation = () => {\n  return new Promise((resolve, reject) => {\n    if (!navigator.geolocation) {\n      reject(new Error('Geolocation not supported'));\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        try {\n          const { latitude, longitude } = position.coords;\n          \n          // Tamil Nadu coordinates check\n          if (latitude < 8.0 || latitude > 13.5 || longitude < 76.0 || longitude > 80.5) {\n            reject(new Error('Location outside Tamil Nadu'));\n            return;\n          }\n          \n          const districts = await api.getDistricts();\n          \n          // Simple coordinate-based district mapping for major cities\n          const districtMap = {\n            'CHENNAI': { lat: 13.0827, lng: 80.2707, radius: 0.5 },\n            'COIMBATORE': { lat: 11.0168, lng: 76.9558, radius: 0.3 },\n            'MADURAI': { lat: 9.9252, lng: 78.1198, radius: 0.3 },\n            'TIRUCHIRAPPALLI': { lat: 10.7905, lng: 78.7047, radius: 0.3 },\n            'SALEM': { lat: 11.664, lng: 78.146, radius: 0.3 },\n            'TIRUNELVELI': { lat: 8.7139, lng: 77.7567, radius: 0.3 },\n            'VELLORE': { lat: 12.9165, lng: 79.1325, radius: 0.3 }\n          };\n          \n          let detectedDistrict = null;\n          \n          // Find closest district\n          for (const [district, coords] of Object.entries(districtMap)) {\n            const distance = Math.sqrt(\n              Math.pow(latitude - coords.lat, 2) + Math.pow(longitude - coords.lng, 2)\n            );\n            \n            if (distance <= coords.radius && districts.data.includes(district)) {\n              detectedDistrict = district;\n              break;\n            }\n          }\n          \n          // Fallback to first available district if in Tamil Nadu\n          if (!detectedDistrict && districts.data.length > 0) {\n            detectedDistrict = districts.data[0];\n          }\n          \n          resolve(detectedDistrict);\n        } catch (error) {\n          reject(error);\n        }\n      },\n      (error) => {\n        if (error.code === 1) {\n          reject(new Error('Location access denied'));\n        } else if (error.code === 2) {\n          reject(new Error('Location unavailable'));\n        } else {\n          reject(new Error('Location timeout'));\n        }\n      },\n      { timeout: 10000, enableHighAccuracy: false }\n    );\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}